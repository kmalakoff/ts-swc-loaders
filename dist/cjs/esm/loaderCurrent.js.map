{"version":3,"sources":["loaderCurrent.mjs"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { URL, fileURLToPath, pathToFileURL } from 'url';\nimport process from 'process';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport packageType from '../packageType.mjs';\nimport transformSync from './transformSync.mjs';\n\nconst major = +process.versions.node.split('.')[0];\nconst importJSONKey = major >= 18 ? 'importAttributes' : 'importAssertions';\n\nconst INTERNAL_PATHS = [new URL('..', import.meta.url).href, new URL('../../node_modules', import.meta.url).href];\nconst isInternal = (x) => INTERNAL_PATHS.some((y) => x.startsWith(y));\n\nconst moduleRegEx = /^[^.\\/]|^\\.[^.\\/]|^\\.\\.[^\\/]/;\nconst indexExtensions = extensions.map((x) => `index${x}`);\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nexport async function resolve(specifier, context, defaultResolve) {\n  if (specifier.startsWith('node:')) specifier = specifier.slice(5); // node built-in\n  const parentURL = context.parentURL && path.isAbsolute(context.parentURL) ? pathToFileURL(context.parentURL) : context.parentURL; // windows\n  const url = parentURL ? new URL(specifier, parentURL).href : new URL(specifier).href;\n\n  // resolve from extension or as a module\n  const ext = path.extname(specifier);\n  if (ext.length || moduleRegEx.test(specifier)) {\n    const data = await defaultResolve(specifier, context, defaultResolve);\n    if (!data.format) data.format = ext.length ? packageType(url) : 'commonjs'; // no extension assume commonjs\n    return data;\n  }\n\n  // directory\n  if (specifier.endsWith('/')) {\n    const items = fs.readdirSync(specifier);\n    for (const item of items) {\n      if (indexExtensions.indexOf(item) >= 0) {\n        return await resolve(specifier + item, context, defaultResolve);\n      }\n    }\n  }\n\n  // guess extension\n  else {\n    for (const ext of extensions) {\n      try {\n        return await resolve(specifier + ext, context, defaultResolve);\n      } catch (_err) {\n        // skip\n      }\n    }\n  }\n\n  throw new Error(`Cannot resolve: ${specifier}`);\n}\n\nexport async function load(url, context, defaultLoad) {\n  if (url.startsWith('node:')) return await defaultLoad(url, context, defaultLoad);\n  if (url.endsWith('.json')) context[importJSONKey] = Object.assign(context[importJSONKey] || {}, { type: 'json' });\n\n  const parentURL = context.parentURL && path.isAbsolute(context.parentURL) ? pathToFileURL(context.parentURL) : context.parentURL; // windows\n  url = parentURL ? new URL(specifier, parentURL).href : url;\n\n  const loaded = await defaultLoad(url, context, defaultLoad);\n  const filePath = fileURLToPath(url);\n  const hasSource = loaded.source;\n  if (!hasSource) loaded.source = fs.readFileSync(filePath);\n\n  // filter\n  if (isInternal(url)) return loaded;\n  if (url.endsWith('.d.ts')) return { ...loaded, format: 'module', source: '' };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n  if (!match(filePath)) return loaded;\n\n  // transform\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n\n  return {\n    ...loaded,\n    format: hasSource ? 'module' : 'commonjs',\n    source: data.code,\n  };\n}\n"],"names":["load","resolve","major","process","versions","node","split","importJSONKey","INTERNAL_PATHS","URL","href","isInternal","x","some","y","startsWith","moduleRegEx","indexExtensions","extensions","map","cache","Cache","config","loadTSConfig","path","cwd","match","createMatcher","specifier","context","defaultResolve","parentURL","url","ext","data","items","item","_err","slice","isAbsolute","pathToFileURL","extname","length","test","format","packageType","endsWith","fs","readdirSync","indexOf","Error","defaultLoad","loaded","filePath","hasSource","contents","Object","assign","type","fileURLToPath","source","readFileSync","toString","getOrUpdate","cachePath","transformSync","code"],"mappings":"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"}