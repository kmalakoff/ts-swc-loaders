{"version":3,"sources":["loaderLegacy.mjs"],"sourcesContent":["import path from 'path';\nimport { fileURLToPath } from 'url';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport packageType from '../packageType.mjs';\nimport transformSync from '../transformSync.cjs';\n\nconst EXT_TO_FORMAT = {\n  '.json': 'json',\n  '.mjs': 'module',\n  '.mts': 'module',\n  '.cjs': 'commonjs',\n  '.cts': 'commonjs',\n};\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nasync function _getFormat(url, context, next) {\n  // file\n  if (url.startsWith('file://')) {\n    let format = EXT_TO_FORMAT[path.extname(url)];\n    if (!format) format = packageType(url);\n    if (url.endsWith('/node_modules/yargs/yargs')) format = 'commonjs'; // args bin is cjs in a module\n    return { format };\n  }\n\n  // relative\n  return await next(url, context);\n}\n\nasync function _transformSource(source, context, next) {\n  const { url } = context;\n  const loaded = await next(source, context);\n  const filePath = fileURLToPath(url);\n\n  // filter\n  if (!match(filePath)) return loaded;\n  if (url.endsWith('.d.ts')) return { source: '' };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n\n  return {\n    source: data.code,\n  };\n}\n\nconst major = +process.versions.node.split('.')[0];\n\nexport const getFormat = major < 16 ? _getFormat : undefined;\nexport const transformSource = major < 16 ? _transformSource : undefined;\n"],"names":["getFormat","transformSource","EXT_TO_FORMAT","cache","Cache","config","loadTSConfig","path","resolve","process","cwd","match","createMatcher","_getFormat","url","context","next","format","startsWith","extname","packageType","endsWith","_transformSource","source","loaded","filePath","contents","data","fileURLToPath","extensions","indexOf","toString","getOrUpdate","cachePath","transformSync","code","major","versions","node","split","undefined"],"mappings":";;;;;;;;;;;IAuDaA,SAAS;eAATA;;IACAC,eAAe;eAAfA;;;2DAxDI;mBACa;4DAEZ;oEACQ;iEACH;mEACE;kEACD;uEACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE1B,IAAMC,gBAAgB;IACpB,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;AACV;AAEA,IAAMC,QAAQ,IAAIC,cAAK;AACvB,IAAMC,SAASC,IAAAA,qBAAY,EAACC,aAAI,CAACC,OAAO,CAACC,QAAQC,GAAG,IAAI;AACxD,IAAMC,QAAQC,IAAAA,sBAAa,EAACP;SAEbQ,WAAWC,GAAG,EAAEC,OAAO,EAAEC,IAAI;WAA7BH;;SAAAA;IAAAA,cAAf,oBAAA,SAA0BC,GAAG,EAAEC,OAAO,EAAEC,IAAI;YAGpCC;;;;oBAFN,OAAO;oBACP,IAAIH,IAAII,UAAU,CAAC,YAAY;wBACzBD,SAASf,aAAa,CAACK,aAAI,CAACY,OAAO,CAACL,KAAK;wBAC7C,IAAI,CAACG,QAAQA,SAASG,IAAAA,oBAAW,EAACN;wBAClC,IAAIA,IAAIO,QAAQ,CAAC,8BAA8BJ,SAAS,YAAY,8BAA8B;wBAClG;;4BAAO;gCAAEA,QAAAA;4BAAO;;oBAClB;oBAGO;;wBAAMD,KAAKF,KAAKC;;;oBADvB,WAAW;oBACX;;wBAAO;;;;IACT;WAXeF;;SAaAS,iBAAiBC,MAAM,EAAER,OAAO,EAAEC,IAAI;WAAtCM;;SAAAA;IAAAA,oBAAf,oBAAA,SAAgCC,MAAM,EAAER,OAAO,EAAEC,IAAI;YAC3CF,KACFU,QACAC,UAOAC,UACAC;;;;oBAVEb,MAAQC,QAARD;oBACO;;wBAAME,KAAKO,QAAQR;;;oBAA5BS,SAAS;oBACTC,WAAWG,IAAAA,kBAAa,EAACd;oBAE/B,SAAS;oBACT,IAAI,CAACH,MAAMc,WAAW;;wBAAOD;;oBAC7B,IAAIV,IAAIO,QAAQ,CAAC,UAAU;;wBAAO;4BAAEE,QAAQ;wBAAG;;oBAC/C,IAAIM,mBAAU,CAACC,OAAO,CAACvB,aAAI,CAACY,OAAO,CAACM,aAAa,GAAG;;wBAAOD;;oBAErDE,WAAWF,OAAOD,MAAM,CAACQ,QAAQ;oBACjCJ,OAAOxB,MAAM6B,WAAW,CAAC7B,MAAM8B,SAAS,CAACR,UAAUpB,SAASqB,UAAU;+BAAMQ,IAAAA,yBAAa,EAACR,UAAUD,UAAUpB;;oBAEpH;;wBAAO;4BACLkB,QAAQI,KAAKQ,IAAI;wBACnB;;;;IACF;WAhBeb;;AAkBf,IAAMc,QAAQ,CAAC3B,QAAQ4B,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;AAE3C,IAAMvC,YAAYoC,QAAQ,KAAKvB,aAAa2B;AAC5C,IAAMvC,kBAAkBmC,QAAQ,KAAKd,mBAAmBkB"}