{"version":3,"sources":["toPath.mjs"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\nimport process from 'node:process';\nimport { fileURLToPath } from 'node:url';\nimport resolve from 'resolve';\nimport packageUp from './packageUp.mjs';\n\nconst moduleRegEx = /^[^.\\/]|^\\.[^.\\/]|^\\.\\.[^\\/]/;\n\nexport default function toPath(x, context) {\n  if (x.startsWith('file://')) return fileURLToPath(x);\n  if (path.isAbsolute(x)) return x;\n  if (x[0] === '.') {\n    // biome-ignore lint/complexity/useOptionalChain: <explanation>\n    const parentPath = context && context.parentURL ? path.dirname(toPath(context.parentURL)) : process.cwd();\n    return path.resolve(parentPath, x);\n  }\n  if (moduleRegEx.test(x)) {\n    // biome-ignore lint/complexity/useOptionalChain: <explanation>\n    const parentPath = context && context.parentURL ? path.dirname(toPath(context.parentURL)) : process.cwd();\n    const main = resolve.sync(x, {\n      basedir: parentPath,\n      extensions: ['.js', '.json', '.node', '.mjs'],\n    });\n    const pkg = packageUp(main);\n    if (!pkg || !pkg.json.module) return main;\n\n    // try resolving as a module\n    const modulePath = path.resolve(path.dirname(pkg.path), pkg.json.module);\n    if (pkg.json.name === x) return modulePath; // the module\n\n    // a relative path. Only accept if it doesn't break the relative naming and it exists\n    const mainPath = path.resolve(path.dirname(pkg.path), pkg.json.main);\n    const moduleResolved = path.resolve(modulePath, path.relative(mainPath, main));\n    return moduleResolved.indexOf(x.replace(pkg.json.name, '')) < 0 || !fs.existsSync(moduleResolved) ? main : moduleResolved;\n  }\n\n  return x;\n}\n"],"names":["toPath","moduleRegEx","x","context","startsWith","fileURLToPath","path","isAbsolute","parentPath","parentURL","dirname","process","cwd","resolve","test","main","sync","basedir","extensions","pkg","packageUp","json","module","modulePath","name","mainPath","moduleResolved","relative","indexOf","replace","fs","existsSync"],"mappings":";;;;+BASA;;;eAAwBA;;;6DATT;+DACE;kEACG;uBACU;8DACV;gEACE;;;;;;AAEtB,IAAMC,cAAc;AAEL,SAASD,OAAOE,CAAC,EAAEC,OAAO;IACvC,IAAID,EAAEE,UAAU,CAAC,YAAY,OAAOC,IAAAA,sBAAa,EAACH;IAClD,IAAII,iBAAI,CAACC,UAAU,CAACL,IAAI,OAAOA;IAC/B,IAAIA,CAAC,CAAC,EAAE,KAAK,KAAK;QAChB,+DAA+D;QAC/D,IAAMM,aAAaL,WAAWA,QAAQM,SAAS,GAAGH,iBAAI,CAACI,OAAO,CAACV,OAAOG,QAAQM,SAAS,KAAKE,oBAAO,CAACC,GAAG;QACvG,OAAON,iBAAI,CAACO,OAAO,CAACL,YAAYN;IAClC;IACA,IAAID,YAAYa,IAAI,CAACZ,IAAI;QACvB,+DAA+D;QAC/D,IAAMM,cAAaL,WAAWA,QAAQM,SAAS,GAAGH,iBAAI,CAACI,OAAO,CAACV,OAAOG,QAAQM,SAAS,KAAKE,oBAAO,CAACC,GAAG;QACvG,IAAMG,OAAOF,gBAAO,CAACG,IAAI,CAACd,GAAG;YAC3Be,SAAST;YACTU,YAAY;gBAAC;gBAAO;gBAAS;gBAAS;aAAO;QAC/C;QACA,IAAMC,MAAMC,IAAAA,kBAAS,EAACL;QACtB,IAAI,CAACI,OAAO,CAACA,IAAIE,IAAI,CAACC,MAAM,EAAE,OAAOP;QAErC,4BAA4B;QAC5B,IAAMQ,aAAajB,iBAAI,CAACO,OAAO,CAACP,iBAAI,CAACI,OAAO,CAACS,IAAIb,IAAI,GAAGa,IAAIE,IAAI,CAACC,MAAM;QACvE,IAAIH,IAAIE,IAAI,CAACG,IAAI,KAAKtB,GAAG,OAAOqB,YAAY,aAAa;QAEzD,qFAAqF;QACrF,IAAME,WAAWnB,iBAAI,CAACO,OAAO,CAACP,iBAAI,CAACI,OAAO,CAACS,IAAIb,IAAI,GAAGa,IAAIE,IAAI,CAACN,IAAI;QACnE,IAAMW,iBAAiBpB,iBAAI,CAACO,OAAO,CAACU,YAAYjB,iBAAI,CAACqB,QAAQ,CAACF,UAAUV;QACxE,OAAOW,eAAeE,OAAO,CAAC1B,EAAE2B,OAAO,CAACV,IAAIE,IAAI,CAACG,IAAI,EAAE,OAAO,KAAK,CAACM,eAAE,CAACC,UAAU,CAACL,kBAAkBX,OAAOW;IAC7G;IAEA,OAAOxB;AACT"}