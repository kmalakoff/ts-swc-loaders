{"version":3,"sources":["Cache.mjs"],"sourcesContent":["import fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport osShim from 'os-shim';\n\nimport mkdirp from 'mkdirp';\nimport shortHash from 'short-hash';\n\nconst tmpdir = os.tmpdir || osShim.tmpdir;\n\nfunction unlinkSafe(filePath) {\n  try {\n    fs.unlinkSync(filePath);\n  } catch (_err) {\n    // skip\n  }\n}\nfunction timeMS() {\n  return new Date().valueOf();\n}\nconst MS_TO_DAYS = 1000 * 60 * 60 * 24;\n\nexport default class Cache {\n  constructor(options) {\n    options = options || {};\n    this.cwd = process.cwd();\n    this.cwdHash = shortHash(process.cwd());\n    this.root = options.root || path.join(tmpdir(), 'ts-swc-loaders');\n    this.maxAge = options.maxAge || 1 * MS_TO_DAYS;\n  }\n\n  cachePath(filePath, options) {\n    const relFilePath = path.relative(this.cwd, filePath);\n    let basename = path.basename(relFilePath);\n    const dirHash = shortHash(path.dirname(relFilePath));\n    if (options) basename += `-${shortHash(JSON.stringify(options || {}))}`;\n    return path.join(this.root, this.cwdHash, dirHash, `${basename}.json`);\n  }\n\n  get(cachePath) {\n    const record = this.getRecord(cachePath);\n    return record ? record.data : null;\n  }\n\n  getRecord(cachePath) {\n    try {\n      const record = JSON.parse(fs.readFileSync(cachePath, 'utf8'));\n      const time = timeMS();\n      if (time - record.time > this.maxAge) {\n        unlinkSafe(cachePath);\n        return null;\n      }\n      return record;\n    } catch (_err) {\n      return null;\n    }\n  }\n\n  getOrUpdate(cachePath, contents, fn) {\n    const hash = shortHash(contents);\n    const record = this.getRecord(cachePath);\n    if (record && record.hash === hash) return record.data;\n\n    // miss\n    const data = fn(contents);\n    this.set(cachePath, data, { hash: hash });\n    return data;\n  }\n\n  set(cachePath, data, options) {\n    options = options || {};\n    const record = {\n      data: data,\n      time: options.time || timeMS(),\n      hash: options.hash,\n    };\n    mkdirp.sync(path.dirname(cachePath));\n    fs.writeFileSync(cachePath, JSON.stringify(record), 'utf8');\n  }\n}\n"],"names":["Cache","tmpdir","os","osShim","unlinkSafe","filePath","fs","unlinkSync","_err","timeMS","Date","valueOf","MS_TO_DAYS","options","cwd","process","cwdHash","shortHash","root","path","join","maxAge","cachePath","relFilePath","relative","basename","dirHash","dirname","JSON","stringify","get","record","getRecord","data","parse","readFileSync","time","getOrUpdate","contents","fn","hash","set","mkdirp","sync","writeFileSync"],"mappings":"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"}