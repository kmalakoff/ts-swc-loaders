{"version":3,"sources":["loaderCurrent.mjs"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { URL, fileURLToPath, pathToFileURL } from 'url';\nimport process from 'process';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport packageType from '../packageType.mjs';\nimport transformSync from '../transformSync.cjs';\n\nconst major = +process.versions.node.split('.')[0];\nconst importJSONKey = major >= 18 ? 'importAttributes' : 'importAssertions';\n\nconst moduleRegEx = /^[^.\\/]|^\\.[^.\\/]|^\\.\\.[^\\/]/;\nconst indexExtensions = extensions.map((x) => `index${x}`);\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nexport async function resolve(specifier, context, defaultResolve) {\n  if (specifier.startsWith('node:')) specifier = specifier.slice(5); // node built-in\n  const parentURL = context.parentURL && path.isAbsolute(context.parentURL) ? pathToFileURL(context.parentURL) : context.parentURL; // windows\n  const url = parentURL ? new URL(specifier, parentURL).href : new URL(specifier).href;\n\n  // resolve from extension or as a module\n  if (path.extname(specifier) || moduleRegEx.test(specifier)) {\n    const data = await defaultResolve(specifier, context, defaultResolve);\n    if (!data.format) data.format = packageType(url);\n    if (specifier.endsWith('/node_modules/yargs/yargs')) data.format = 'commonjs'; // args bin is cjs in a module\n    return data;\n  }\n\n  // directory\n  if (specifier.endsWith('/')) {\n    const items = fs.readdirSync(specifier);\n    for (const item of items) {\n      if (indexExtensions.indexOf(item) >= 0) {\n        return await resolve(specifier + item, context, defaultResolve);\n      }\n    }\n  }\n\n  throw new Error(`Cannot resolve: ${specifier}`);\n}\n\nexport async function load(url, context, defaultLoad) {\n  if (url.startsWith('node:')) return await defaultLoad(url, context, defaultLoad);\n  if (url.endsWith('.json')) context[importJSONKey] = Object.assign(context[importJSONKey] || {}, { type: 'json' });\n\n  const parentURL = context.parentURL && path.isAbsolute(context.parentURL) ? pathToFileURL(context.parentURL) : context.parentURL; // windows\n  url = parentURL ? new URL(specifier, parentURL).href : url;\n\n  const loaded = await defaultLoad(url, context, defaultLoad);\n  const filePath = fileURLToPath(url);\n  const hasSource = loaded.source;\n  if (!hasSource) loaded.source = fs.readFileSync(filePath);\n\n  // filter\n  if (!match(filePath)) return loaded;\n  if (url.endsWith('.d.ts')) return { ...loaded, format: 'module', source: '' };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n\n  // transform\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n\n  return {\n    ...loaded,\n    format: hasSource ? 'module' : 'commonjs',\n    source: data.code,\n  };\n}\n"],"names":["fs","path","URL","fileURLToPath","pathToFileURL","process","Cache","createMatcher","extensions","loadTSConfig","packageType","transformSync","major","versions","node","split","importJSONKey","moduleRegEx","indexExtensions","map","x","cache","config","resolve","cwd","match","specifier","context","defaultResolve","startsWith","slice","parentURL","isAbsolute","url","href","extname","test","data","format","endsWith","items","readdirSync","item","indexOf","Error","load","defaultLoad","Object","assign","type","loaded","filePath","hasSource","source","readFileSync","contents","toString","getOrUpdate","cachePath","code"],"mappings":"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"}