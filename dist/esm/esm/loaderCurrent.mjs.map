{"version":3,"sources":["loaderCurrent.mjs"],"sourcesContent":["import { promises as fs } from 'node:fs';\nimport path from 'node:path';\nimport process from 'node:process';\nimport { fileURLToPath } from 'node:url';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport packageType from '../packageType.mjs';\nimport transformSync from '../transformSync.cjs';\n\nconst major = +process.versions.node.split('.')[0];\nconst importJSONKey = major >= 18 ? 'importAttributes' : 'importAssertions';\n\nconst moduleRegEx = /^[^.\\/]|^\\.[^.\\/]|^\\.\\.[^\\/]/;\nconst indexExtensions = extensions.map((x) => `index${x}`);\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nexport async function resolve(specifier, context, next) {\n  // if (isBuiltin(specifier)) return next(specifier, context); // TODO: optimize, but not available on older node\n\n  // directory\n  if (specifier.endsWith('/')) {\n    const items = await fs.readdir(specifier);\n    for (const item of items) {\n      if (indexExtensions.indexOf(item) >= 0) {\n        return await resolve(specifier + item, context, next);\n      }\n    }\n  }\n  // no extension and not a module, guess an extension\n  else if (!path.extname(specifier) && !moduleRegEx.test(specifier)) {\n    // console.log(specifier, context.parentURL);\n    // const items = await fs.readdir(specifier); // TODO: search the directory\n    for (const ext of extensions) {\n      try {\n        return await resolve(specifier + ext, context, next);\n      } catch (_err) {\n        // skip\n      }\n    }\n  }\n\n  const data = await next(specifier, context);\n  if (!data.format) data.format = packageType(data.url);\n  if (specifier.endsWith('/node_modules/yargs/yargs')) data.format = 'commonjs'; // args bin is cjs in a module\n  return {\n    ...data,\n    shortCircuit: true,\n  };\n}\n\nexport async function load(url, context, next) {\n  if (url.startsWith('node:')) return await next(url, context, next);\n  if (url.endsWith('.json')) context[importJSONKey] = Object.assign(context[importJSONKey] || {}, { type: 'json' });\n\n  const loaded = await next(url, context);\n  const filePath = fileURLToPath(url);\n  const hasSource = loaded.source;\n  if (!hasSource) loaded.source = await fs.readFile(filePath);\n\n  // filter\n  if (!match(filePath)) return loaded;\n  if (url.endsWith('.d.ts'))\n    return {\n      ...loaded,\n      format: 'module',\n      source: '',\n    };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n\n  // transform\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n  return {\n    ...loaded,\n    format: hasSource ? 'module' : 'commonjs',\n    shortCircuit: true,\n    source: data.code,\n  };\n}\n"],"names":["promises","fs","path","process","fileURLToPath","Cache","createMatcher","extensions","loadTSConfig","packageType","transformSync","major","versions","node","split","importJSONKey","moduleRegEx","indexExtensions","map","x","cache","config","resolve","cwd","match","specifier","context","next","endsWith","items","readdir","item","indexOf","extname","test","ext","_err","data","format","url","shortCircuit","load","startsWith","Object","assign","type","loaded","filePath","hasSource","source","readFile","contents","toString","getOrUpdate","cachePath","code"],"mappings":"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"}