{"version":3,"sources":["loaderCurrent.mjs"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { URL, fileURLToPath, pathToFileURL } from 'url';\nimport process from 'process';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport packageType from '../packageType.mjs';\nimport transformSync from './transformSync.mjs';\n\nconst major = +process.versions.node.split('.')[0];\nconst importJSONKey = major >= 18 ? 'importAttributes' : 'importAssertions';\n\nconst INTERNAL_PATHS = [new URL('..', import.meta.url).href, new URL('../../node_modules', import.meta.url).href];\nconst isInternal = (x) => INTERNAL_PATHS.some((y) => x.startsWith(y));\n\nconst moduleRegEx = /^[^.\\/]|^\\.[^.\\/]|^\\.\\.[^\\/]/;\nconst indexExtensions = extensions.map((x) => `index${x}`);\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nexport async function resolve(specifier, context, defaultResolve) {\n  if (specifier.startsWith('node:')) specifier = specifier.slice(5); // node built-in\n  const parentURL = context.parentURL && path.isAbsolute(context.parentURL) ? pathToFileURL(context.parentURL) : context.parentURL; // windows\n  const url = parentURL ? new URL(specifier, parentURL).href : new URL(specifier).href;\n\n  // resolve from extension or as a module\n  const ext = path.extname(specifier);\n  if (ext.length || moduleRegEx.test(specifier)) {\n    const data = await defaultResolve(specifier, context, defaultResolve);\n    if (!data.format) data.format = ext.length ? packageType(url) : 'commonjs'; // no extension assume commonjs\n    return data;\n  }\n\n  // directory\n  if (specifier.endsWith('/')) {\n    const items = fs.readdirSync(specifier);\n    for (const item of items) {\n      if (indexExtensions.indexOf(item) >= 0) {\n        return await resolve(specifier + item, context, defaultResolve);\n      }\n    }\n  }\n\n  // guess extension\n  else {\n    for (const ext of extensions) {\n      try {\n        return await resolve(specifier + ext, context, defaultResolve);\n      } catch (_err) {\n        // skip\n      }\n    }\n  }\n\n  throw new Error(`Cannot resolve: ${specifier}`);\n}\n\nexport async function load(url, context, defaultLoad) {\n  if (url.startsWith('node:')) return await defaultLoad(url, context, defaultLoad);\n  if (url.endsWith('.json')) context[importJSONKey] = Object.assign(context[importJSONKey] || {}, { type: 'json' });\n\n  const parentURL = context.parentURL && path.isAbsolute(context.parentURL) ? pathToFileURL(context.parentURL) : context.parentURL; // windows\n  url = parentURL ? new URL(specifier, parentURL).href : url;\n\n  const loaded = await defaultLoad(url, context, defaultLoad);\n  const filePath = fileURLToPath(url);\n  const hasSource = loaded.source;\n  if (!hasSource) loaded.source = fs.readFileSync(filePath);\n\n  // filter\n  if (isInternal(url)) return loaded;\n  if (url.endsWith('.d.ts')) return { ...loaded, format: 'module', source: '' };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n  if (!match(filePath)) return loaded;\n\n  // transform\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n\n  return {\n    ...loaded,\n    format: hasSource ? 'module' : 'commonjs',\n    source: data.code,\n  };\n}\n"],"names":["fs","path","URL","fileURLToPath","pathToFileURL","process","Cache","createMatcher","extensions","loadTSConfig","packageType","transformSync","major","versions","node","split","importJSONKey","INTERNAL_PATHS","url","href","isInternal","x","some","y","startsWith","moduleRegEx","indexExtensions","map","cache","config","resolve","cwd","match","specifier","context","defaultResolve","slice","parentURL","isAbsolute","ext","extname","length","test","data","format","endsWith","items","readdirSync","item","indexOf","_err","Error","load","defaultLoad","Object","assign","type","loaded","filePath","hasSource","source","readFileSync","contents","toString","getOrUpdate","cachePath","code"],"mappings":"AAAA,OAAOA,QAAQ,KAAK;AACpB,OAAOC,UAAU,OAAO;AACxB,SAASC,GAAG,EAAEC,aAAa,EAAEC,aAAa,QAAQ,MAAM;AACxD,OAAOC,aAAa,UAAU;AAE9B,OAAOC,WAAW,eAAe;AACjC,OAAOC,mBAAmB,uBAAuB;AACjD,OAAOC,gBAAgB,oBAAoB;AAC3C,OAAOC,kBAAkB,sBAAsB;AAC/C,OAAOC,iBAAiB,qBAAqB;AAC7C,OAAOC,mBAAmB,sBAAsB;AAEhD,MAAMC,QAAQ,CAACP,QAAQQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;AAClD,MAAMC,gBAAgBJ,SAAS,KAAK,qBAAqB;AAEzD,MAAMK,iBAAiB;IAAC,IAAIf,IAAI,MAAM,YAAYgB,GAAG,EAAEC,IAAI;IAAE,IAAIjB,IAAI,sBAAsB,YAAYgB,GAAG,EAAEC,IAAI;CAAC;AACjH,MAAMC,aAAa,CAACC,IAAMJ,eAAeK,IAAI,CAAC,CAACC,IAAMF,EAAEG,UAAU,CAACD;AAElE,MAAME,cAAc;AACpB,MAAMC,kBAAkBlB,WAAWmB,GAAG,CAAC,CAACN,IAAM,CAAC,KAAK,EAAEA,EAAE,CAAC;AAEzD,MAAMO,QAAQ,IAAItB;AAClB,MAAMuB,SAASpB,aAAaR,KAAK6B,OAAO,CAACzB,QAAQ0B,GAAG,IAAI;AACxD,MAAMC,QAAQzB,cAAcsB;AAE5B,OAAO,eAAeC,QAAQG,UAAS,EAAEC,OAAO,EAAEC,cAAc;IAC9D,IAAIF,WAAUT,UAAU,CAAC,UAAUS,aAAYA,WAAUG,KAAK,CAAC,IAAI,gBAAgB;IACnF,MAAMC,YAAYH,QAAQG,SAAS,IAAIpC,KAAKqC,UAAU,CAACJ,QAAQG,SAAS,IAAIjC,cAAc8B,QAAQG,SAAS,IAAIH,QAAQG,SAAS,EAAE,UAAU;IAC5I,MAAMnB,MAAMmB,YAAY,IAAInC,IAAI+B,YAAWI,WAAWlB,IAAI,GAAG,IAAIjB,IAAI+B,YAAWd,IAAI;IAEpF,wCAAwC;IACxC,MAAMoB,MAAMtC,KAAKuC,OAAO,CAACP;IACzB,IAAIM,IAAIE,MAAM,IAAIhB,YAAYiB,IAAI,CAACT,aAAY;QAC7C,MAAMU,OAAO,MAAMR,eAAeF,YAAWC,SAASC;QACtD,IAAI,CAACQ,KAAKC,MAAM,EAAED,KAAKC,MAAM,GAAGL,IAAIE,MAAM,GAAG/B,YAAYQ,OAAO,YAAY,+BAA+B;QAC3G,OAAOyB;IACT;IAEA,YAAY;IACZ,IAAIV,WAAUY,QAAQ,CAAC,MAAM;QAC3B,MAAMC,QAAQ9C,GAAG+C,WAAW,CAACd;QAC7B,KAAK,MAAMe,QAAQF,MAAO;YACxB,IAAIpB,gBAAgBuB,OAAO,CAACD,SAAS,GAAG;gBACtC,OAAO,MAAMlB,QAAQG,aAAYe,MAAMd,SAASC;YAClD;QACF;IACF,OAGK;QACH,KAAK,MAAMI,OAAO/B,WAAY;YAC5B,IAAI;gBACF,OAAO,MAAMsB,QAAQG,aAAYM,KAAKL,SAASC;YACjD,EAAE,OAAOe,MAAM;YACb,OAAO;YACT;QACF;IACF;IAEA,MAAM,IAAIC,MAAM,CAAC,gBAAgB,EAAElB,WAAU,CAAC;AAChD;AAEA,OAAO,eAAemB,KAAKlC,GAAG,EAAEgB,OAAO,EAAEmB,WAAW;IAClD,IAAInC,IAAIM,UAAU,CAAC,UAAU,OAAO,MAAM6B,YAAYnC,KAAKgB,SAASmB;IACpE,IAAInC,IAAI2B,QAAQ,CAAC,UAAUX,OAAO,CAAClB,cAAc,GAAGsC,OAAOC,MAAM,CAACrB,OAAO,CAAClB,cAAc,IAAI,CAAC,GAAG;QAAEwC,MAAM;IAAO;IAE/G,MAAMnB,YAAYH,QAAQG,SAAS,IAAIpC,KAAKqC,UAAU,CAACJ,QAAQG,SAAS,IAAIjC,cAAc8B,QAAQG,SAAS,IAAIH,QAAQG,SAAS,EAAE,UAAU;IAC5InB,MAAMmB,YAAY,IAAInC,IAAI+B,WAAWI,WAAWlB,IAAI,GAAGD;IAEvD,MAAMuC,SAAS,MAAMJ,YAAYnC,KAAKgB,SAASmB;IAC/C,MAAMK,WAAWvD,cAAce;IAC/B,MAAMyC,YAAYF,OAAOG,MAAM;IAC/B,IAAI,CAACD,WAAWF,OAAOG,MAAM,GAAG5D,GAAG6D,YAAY,CAACH;IAEhD,SAAS;IACT,IAAItC,WAAWF,MAAM,OAAOuC;IAC5B,IAAIvC,IAAI2B,QAAQ,CAAC,UAAU,OAAO;QAAE,GAAGY,MAAM;QAAEb,QAAQ;QAAUgB,QAAQ;IAAG;IAC5E,IAAIpD,WAAWyC,OAAO,CAAChD,KAAKuC,OAAO,CAACkB,aAAa,GAAG,OAAOD;IAC3D,IAAI,CAACzB,MAAM0B,WAAW,OAAOD;IAE7B,YAAY;IACZ,MAAMK,WAAWL,OAAOG,MAAM,CAACG,QAAQ;IACvC,MAAMpB,OAAOf,MAAMoC,WAAW,CAACpC,MAAMqC,SAAS,CAACP,UAAU7B,SAASiC,UAAU,IAAMnD,cAAcmD,UAAUJ,UAAU7B;IAEpH,OAAO;QACL,GAAG4B,MAAM;QACTb,QAAQe,YAAY,WAAW;QAC/BC,QAAQjB,KAAKuB,IAAI;IACnB;AACF"}