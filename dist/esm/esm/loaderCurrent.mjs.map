{"version":3,"sources":["loaderCurrent.mjs"],"sourcesContent":["import { promises as fs } from 'node:fs';\nimport path from 'node:path';\nimport process from 'node:process';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport transformSync from '../transformSync.cjs';\nimport packageType from './packageType.mjs';\nimport toPath from './toPath.mjs';\n\nconst major = +process.versions.node.split('.')[0];\nconst importJSONKey = major >= 18 ? 'importAttributes' : 'importAssertions';\n\nconst moduleRegEx = /^[^.\\/]|^\\.[^.\\/]|^\\.\\.[^\\/]/;\nconst indexExtensions = extensions.map((x) => `index${x}`);\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nexport async function resolve(specifier, context, next) {\n  if (specifier.startsWith('node:')) return next(specifier, context); // TODO: optimize, but isBuiltin not available on older node\n  const filePath = toPath(specifier, context);\n\n  // filtered\n  if (!match(filePath)) {\n    const data = await next(specifier, context);\n    if (!data.format) data.format = 'commonjs'\n    if(path.isAbsolute(filePath) && !path.extname(filePath)) data.format = 'commonjs'; // args bin is cjs in a module\n    return data;\n  }\n\n  // directory\n  if (specifier.endsWith('/')) {\n    const items = await fs.readdir(filePath);\n    for (const item of items) {\n      if (indexExtensions.indexOf(item) >= 0) {\n        return await resolve(specifier + item, context, next);\n      }\n    }\n  }\n  // look up the extension\n  else if (!path.extname(specifier) && !moduleRegEx.test(specifier)) {\n    const fileName = path.basename(filePath);\n    const items = await fs.readdir(path.dirname(filePath));\n    const found = items.find((x) => x.startsWith(fileName) && extensions.indexOf(path.extname(x)) >= 0);\n    if (found) return await resolve(specifier + path.extname(found), context, next);\n  }\n\n  // use default resolve and infer from package type\n  const data = await next(specifier, context);\n  if (!data.format) data.format = packageType(filePath);\n  return data;\n}\n\nexport async function load(url, context, next) {\n  if (url.startsWith('node:')) return await next(url, context, next);\n  if (url.endsWith('.json')) context[importJSONKey] = Object.assign(context[importJSONKey] || {}, { type: 'json' });\n\n  const loaded = await next(url, context);\n  const filePath = toPath(url, context);\n  const hasSource = loaded.source;\n  if (!hasSource) loaded.source = await fs.readFile(filePath);\n\n  // filtered\n  if (!match(filePath)) return loaded;\n  if (url.endsWith('.d.ts'))\n    return {\n      ...loaded,\n      format: 'module',\n      source: '',\n    };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n\n  // transform\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n  return {\n    ...loaded,\n    format: hasSource ? 'module' : 'commonjs',\n    source: data.code,\n    shortCircuit: true,\n  };\n}\n"],"names":["promises","fs","path","process","Cache","createMatcher","extensions","loadTSConfig","transformSync","packageType","toPath","major","versions","node","split","importJSONKey","moduleRegEx","indexExtensions","map","x","cache","config","resolve","cwd","match","specifier","context","next","startsWith","filePath","data","format","isAbsolute","extname","endsWith","items","readdir","item","indexOf","test","fileName","basename","dirname","found","find","load","url","Object","assign","type","loaded","hasSource","source","readFile","contents","toString","getOrUpdate","cachePath","code","shortCircuit"],"mappings":"AAAA,SAASA,YAAYC,EAAE,QAAQ,UAAU;AACzC,OAAOC,UAAU,YAAY;AAC7B,OAAOC,aAAa,eAAe;AAEnC,OAAOC,WAAW,eAAe;AACjC,OAAOC,mBAAmB,uBAAuB;AACjD,OAAOC,gBAAgB,oBAAoB;AAC3C,OAAOC,kBAAkB,sBAAsB;AAC/C,OAAOC,mBAAmB,uBAAuB;AACjD,OAAOC,iBAAiB,oBAAoB;AAC5C,OAAOC,YAAY,eAAe;AAElC,MAAMC,QAAQ,CAACR,QAAQS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;AAClD,MAAMC,gBAAgBJ,SAAS,KAAK,qBAAqB;AAEzD,MAAMK,cAAc;AACpB,MAAMC,kBAAkBX,WAAWY,GAAG,CAAC,CAACC,IAAM,CAAC,KAAK,EAAEA,EAAE,CAAC;AAEzD,MAAMC,QAAQ,IAAIhB;AAClB,MAAMiB,SAASd,aAAaL,KAAKoB,OAAO,CAACnB,QAAQoB,GAAG,IAAI;AACxD,MAAMC,QAAQnB,cAAcgB;AAE5B,OAAO,eAAeC,QAAQG,SAAS,EAAEC,OAAO,EAAEC,IAAI;IACpD,IAAIF,UAAUG,UAAU,CAAC,UAAU,OAAOD,KAAKF,WAAWC,UAAU,4DAA4D;IAChI,MAAMG,WAAWnB,OAAOe,WAAWC;IAEnC,WAAW;IACX,IAAI,CAACF,MAAMK,WAAW;QACpB,MAAMC,OAAO,MAAMH,KAAKF,WAAWC;QACnC,IAAI,CAACI,KAAKC,MAAM,EAAED,KAAKC,MAAM,GAAG;QAChC,IAAG7B,KAAK8B,UAAU,CAACH,aAAa,CAAC3B,KAAK+B,OAAO,CAACJ,WAAWC,KAAKC,MAAM,GAAG,YAAY,8BAA8B;QACjH,OAAOD;IACT;IAEA,YAAY;IACZ,IAAIL,UAAUS,QAAQ,CAAC,MAAM;QAC3B,MAAMC,QAAQ,MAAMlC,GAAGmC,OAAO,CAACP;QAC/B,KAAK,MAAMQ,QAAQF,MAAO;YACxB,IAAIlB,gBAAgBqB,OAAO,CAACD,SAAS,GAAG;gBACtC,OAAO,MAAMf,QAAQG,YAAYY,MAAMX,SAASC;YAClD;QACF;IACF,OAEK,IAAI,CAACzB,KAAK+B,OAAO,CAACR,cAAc,CAACT,YAAYuB,IAAI,CAACd,YAAY;QACjE,MAAMe,WAAWtC,KAAKuC,QAAQ,CAACZ;QAC/B,MAAMM,QAAQ,MAAMlC,GAAGmC,OAAO,CAAClC,KAAKwC,OAAO,CAACb;QAC5C,MAAMc,QAAQR,MAAMS,IAAI,CAAC,CAACzB,IAAMA,EAAES,UAAU,CAACY,aAAalC,WAAWgC,OAAO,CAACpC,KAAK+B,OAAO,CAACd,OAAO;QACjG,IAAIwB,OAAO,OAAO,MAAMrB,QAAQG,YAAYvB,KAAK+B,OAAO,CAACU,QAAQjB,SAASC;IAC5E;IAEA,kDAAkD;IAClD,MAAMG,OAAO,MAAMH,KAAKF,WAAWC;IACnC,IAAI,CAACI,KAAKC,MAAM,EAAED,KAAKC,MAAM,GAAGtB,YAAYoB;IAC5C,OAAOC;AACT;AAEA,OAAO,eAAee,KAAKC,GAAG,EAAEpB,OAAO,EAAEC,IAAI;IAC3C,IAAImB,IAAIlB,UAAU,CAAC,UAAU,OAAO,MAAMD,KAAKmB,KAAKpB,SAASC;IAC7D,IAAImB,IAAIZ,QAAQ,CAAC,UAAUR,OAAO,CAACX,cAAc,GAAGgC,OAAOC,MAAM,CAACtB,OAAO,CAACX,cAAc,IAAI,CAAC,GAAG;QAAEkC,MAAM;IAAO;IAE/G,MAAMC,SAAS,MAAMvB,KAAKmB,KAAKpB;IAC/B,MAAMG,WAAWnB,OAAOoC,KAAKpB;IAC7B,MAAMyB,YAAYD,OAAOE,MAAM;IAC/B,IAAI,CAACD,WAAWD,OAAOE,MAAM,GAAG,MAAMnD,GAAGoD,QAAQ,CAACxB;IAElD,WAAW;IACX,IAAI,CAACL,MAAMK,WAAW,OAAOqB;IAC7B,IAAIJ,IAAIZ,QAAQ,CAAC,UACf,OAAO;QACL,GAAGgB,MAAM;QACTnB,QAAQ;QACRqB,QAAQ;IACV;IACF,IAAI9C,WAAWgC,OAAO,CAACpC,KAAK+B,OAAO,CAACJ,aAAa,GAAG,OAAOqB;IAE3D,YAAY;IACZ,MAAMI,WAAWJ,OAAOE,MAAM,CAACG,QAAQ;IACvC,MAAMzB,OAAOV,MAAMoC,WAAW,CAACpC,MAAMqC,SAAS,CAAC5B,UAAUR,SAASiC,UAAU,IAAM9C,cAAc8C,UAAUzB,UAAUR;IACpH,OAAO;QACL,GAAG6B,MAAM;QACTnB,QAAQoB,YAAY,WAAW;QAC/BC,QAAQtB,KAAK4B,IAAI;QACjBC,cAAc;IAChB;AACF"}