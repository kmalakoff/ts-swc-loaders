{"version":3,"sources":["loaderLegacy.mjs"],"sourcesContent":["import path from 'path';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport transformSync from '../transformSync.cjs';\nimport packageType from './packageType.mjs';\nimport toPath from './toPath.mjs';\n\nconst EXT_TO_FORMAT = {\n  '.json': 'json',\n  '.mjs': 'module',\n  '.mts': 'module',\n  '.cjs': 'commonjs',\n  '.cts': 'commonjs',\n};\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nasync function _getFormat(url, context, next) {\n  if (!url.startsWith('file://')) return await next(url, context);\n  const filePath = toPath(url, context);\n\n  // filtered\n  if (!match(filePath)) {\n    if(!path.extname(filePath)) return { format: 'commonjs' }; // args bin is cjs in a module\n    return await next(url, context);\n  }\n\n  // file\n  const data = { format: EXT_TO_FORMAT[path.extname(url)] };\n  if (!data.format) data.format = await packageType(filePath);\n  return data;\n}\n\nasync function _transformSource(source, context, next) {\n  const loaded = await next(source, context);\n  const filePath = toPath(context.url);\n\n  // filtered\n  if (!match(filePath)) return loaded;\n  if (filePath.endsWith('.d.ts')) return { source: '' };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n\n  return {\n    source: data.code,\n  };\n}\n\nconst major = +process.versions.node.split('.')[0];\n\nexport const getFormat = major < 16 ? _getFormat : undefined;\nexport const transformSource = major < 16 ? _transformSource : undefined;\n"],"names":["path","Cache","createMatcher","extensions","loadTSConfig","transformSync","packageType","toPath","EXT_TO_FORMAT","cache","config","resolve","process","cwd","match","_getFormat","url","context","next","startsWith","filePath","extname","format","data","_transformSource","source","loaded","endsWith","indexOf","contents","toString","getOrUpdate","cachePath","code","major","versions","node","split","getFormat","undefined","transformSource"],"mappings":"AAAA,OAAOA,UAAU,OAAO;AAExB,OAAOC,WAAW,eAAe;AACjC,OAAOC,mBAAmB,uBAAuB;AACjD,OAAOC,gBAAgB,oBAAoB;AAC3C,OAAOC,kBAAkB,sBAAsB;AAC/C,OAAOC,mBAAmB,uBAAuB;AACjD,OAAOC,iBAAiB,oBAAoB;AAC5C,OAAOC,YAAY,eAAe;AAElC,MAAMC,gBAAgB;IACpB,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;AACV;AAEA,MAAMC,QAAQ,IAAIR;AAClB,MAAMS,SAASN,aAAaJ,KAAKW,OAAO,CAACC,QAAQC,GAAG,IAAI;AACxD,MAAMC,QAAQZ,cAAcQ;AAE5B,eAAeK,WAAWC,GAAG,EAAEC,OAAO,EAAEC,IAAI;IAC1C,IAAI,CAACF,IAAIG,UAAU,CAAC,YAAY,OAAO,MAAMD,KAAKF,KAAKC;IACvD,MAAMG,WAAWb,OAAOS,KAAKC;IAE7B,WAAW;IACX,IAAI,CAACH,MAAMM,WAAW;QACpB,IAAG,CAACpB,KAAKqB,OAAO,CAACD,WAAW,OAAO;YAAEE,QAAQ;QAAW,GAAG,8BAA8B;QACzF,OAAO,MAAMJ,KAAKF,KAAKC;IACzB;IAEA,OAAO;IACP,MAAMM,OAAO;QAAED,QAAQd,aAAa,CAACR,KAAKqB,OAAO,CAACL,KAAK;IAAC;IACxD,IAAI,CAACO,KAAKD,MAAM,EAAEC,KAAKD,MAAM,GAAG,MAAMhB,YAAYc;IAClD,OAAOG;AACT;AAEA,eAAeC,iBAAiBC,MAAM,EAAER,OAAO,EAAEC,IAAI;IACnD,MAAMQ,SAAS,MAAMR,KAAKO,QAAQR;IAClC,MAAMG,WAAWb,OAAOU,QAAQD,GAAG;IAEnC,WAAW;IACX,IAAI,CAACF,MAAMM,WAAW,OAAOM;IAC7B,IAAIN,SAASO,QAAQ,CAAC,UAAU,OAAO;QAAEF,QAAQ;IAAG;IACpD,IAAItB,WAAWyB,OAAO,CAAC5B,KAAKqB,OAAO,CAACD,aAAa,GAAG,OAAOM;IAE3D,MAAMG,WAAWH,OAAOD,MAAM,CAACK,QAAQ;IACvC,MAAMP,OAAOd,MAAMsB,WAAW,CAACtB,MAAMuB,SAAS,CAACZ,UAAUV,SAASmB,UAAU,IAAMxB,cAAcwB,UAAUT,UAAUV;IAEpH,OAAO;QACLe,QAAQF,KAAKU,IAAI;IACnB;AACF;AAEA,MAAMC,QAAQ,CAACtB,QAAQuB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;AAElD,OAAO,MAAMC,YAAYJ,QAAQ,KAAKnB,aAAawB,UAAU;AAC7D,OAAO,MAAMC,kBAAkBN,QAAQ,KAAKV,mBAAmBe,UAAU"}