{"version":3,"sources":["loaderLegacy.mjs"],"sourcesContent":["import path from 'path';\nimport { fileURLToPath } from 'url';\n\nimport Cache from '../Cache.mjs';\nimport createMatcher from '../createMatcher.mjs';\nimport extensions from '../extensions.mjs';\nimport loadTSConfig from '../loadTSConfig.mjs';\nimport packageType from '../packageType.mjs';\nimport transformSync from '../transformSync.cjs';\n\nconst EXT_TO_FORMAT = {\n  '.json': 'json',\n  '.mjs': 'module',\n  '.mts': 'module',\n  '.cjs': 'commonjs',\n  '.cts': 'commonjs',\n};\n\nconst cache = new Cache();\nconst config = loadTSConfig(path.resolve(process.cwd(), 'tsconfig.json'));\nconst match = createMatcher(config);\n\nasync function _getFormat(url, context, next) {\n  // file\n  if (url.startsWith('file://')) {\n    let format = EXT_TO_FORMAT[path.extname(url)];\n    if (!format) format = packageType(url);\n    if (url.endsWith('/node_modules/yargs/yargs')) format = 'commonjs'; // args bin is cjs in a module\n    return { format };\n  }\n\n  // relative\n  return await next(url, context);\n}\n\nasync function _transformSource(source, context, next) {\n  const { url } = context;\n  const loaded = await next(source, context);\n  const filePath = fileURLToPath(url);\n\n  // filter\n  if (!match(filePath)) return loaded;\n  if (url.endsWith('.d.ts')) return { source: '' };\n  if (extensions.indexOf(path.extname(filePath)) < 0) return loaded;\n\n  const contents = loaded.source.toString();\n  const data = cache.getOrUpdate(cache.cachePath(filePath, config), contents, () => transformSync(contents, filePath, config));\n\n  return {\n    source: data.code,\n  };\n}\n\nconst major = +process.versions.node.split('.')[0];\n\nexport const getFormat = major < 16 ? _getFormat : undefined;\nexport const transformSource = major < 16 ? _transformSource : undefined;\n"],"names":["path","fileURLToPath","Cache","createMatcher","extensions","loadTSConfig","packageType","transformSync","EXT_TO_FORMAT","cache","config","resolve","process","cwd","match","_getFormat","url","context","next","startsWith","format","extname","endsWith","_transformSource","source","loaded","filePath","indexOf","contents","toString","data","getOrUpdate","cachePath","code","major","versions","node","split","getFormat","undefined","transformSource"],"mappings":"AAAA,OAAOA,UAAU,OAAO;AACxB,SAASC,aAAa,QAAQ,MAAM;AAEpC,OAAOC,WAAW,eAAe;AACjC,OAAOC,mBAAmB,uBAAuB;AACjD,OAAOC,gBAAgB,oBAAoB;AAC3C,OAAOC,kBAAkB,sBAAsB;AAC/C,OAAOC,iBAAiB,qBAAqB;AAC7C,OAAOC,mBAAmB,uBAAuB;AAEjD,MAAMC,gBAAgB;IACpB,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;AACV;AAEA,MAAMC,QAAQ,IAAIP;AAClB,MAAMQ,SAASL,aAAaL,KAAKW,OAAO,CAACC,QAAQC,GAAG,IAAI;AACxD,MAAMC,QAAQX,cAAcO;AAE5B,eAAeK,WAAWC,GAAG,EAAEC,OAAO,EAAEC,IAAI;IAC1C,OAAO;IACP,IAAIF,IAAIG,UAAU,CAAC,YAAY;QAC7B,IAAIC,SAASZ,aAAa,CAACR,KAAKqB,OAAO,CAACL,KAAK;QAC7C,IAAI,CAACI,QAAQA,SAASd,YAAYU;QAClC,IAAIA,IAAIM,QAAQ,CAAC,8BAA8BF,SAAS,YAAY,8BAA8B;QAClG,OAAO;YAAEA;QAAO;IAClB;IAEA,WAAW;IACX,OAAO,MAAMF,KAAKF,KAAKC;AACzB;AAEA,eAAeM,iBAAiBC,MAAM,EAAEP,OAAO,EAAEC,IAAI;IACnD,MAAM,EAAEF,GAAG,EAAE,GAAGC;IAChB,MAAMQ,SAAS,MAAMP,KAAKM,QAAQP;IAClC,MAAMS,WAAWzB,cAAce;IAE/B,SAAS;IACT,IAAI,CAACF,MAAMY,WAAW,OAAOD;IAC7B,IAAIT,IAAIM,QAAQ,CAAC,UAAU,OAAO;QAAEE,QAAQ;IAAG;IAC/C,IAAIpB,WAAWuB,OAAO,CAAC3B,KAAKqB,OAAO,CAACK,aAAa,GAAG,OAAOD;IAE3D,MAAMG,WAAWH,OAAOD,MAAM,CAACK,QAAQ;IACvC,MAAMC,OAAOrB,MAAMsB,WAAW,CAACtB,MAAMuB,SAAS,CAACN,UAAUhB,SAASkB,UAAU,IAAMrB,cAAcqB,UAAUF,UAAUhB;IAEpH,OAAO;QACLc,QAAQM,KAAKG,IAAI;IACnB;AACF;AAEA,MAAMC,QAAQ,CAACtB,QAAQuB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;AAElD,OAAO,MAAMC,YAAYJ,QAAQ,KAAKnB,aAAawB,UAAU;AAC7D,OAAO,MAAMC,kBAAkBN,QAAQ,KAAKX,mBAAmBgB,UAAU"}