{"version":3,"sources":["toPath.mjs"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\nimport process from 'node:process';\nimport { fileURLToPath } from 'node:url';\nimport resolve from 'resolve';\nimport packageUp from './packageUp.mjs';\n\nconst moduleRegEx = /^[^.\\/]|^\\.[^.\\/]|^\\.\\.[^\\/]/;\n\nexport default function toPath(x, context) {\n  if (x.startsWith('file://')) return fileURLToPath(x);\n  if (path.isAbsolute(x)) return x;\n  if (x[0] === '.') {\n    // biome-ignore lint/complexity/useOptionalChain: <explanation>\n    const parentPath = context && context.parentURL ? path.dirname(toPath(context.parentURL)) : process.cwd();\n    return path.resolve(parentPath, x);\n  }\n  if (moduleRegEx.test(x)) {\n    // biome-ignore lint/complexity/useOptionalChain: <explanation>\n    const parentPath = context && context.parentURL ? path.dirname(toPath(context.parentURL)) : process.cwd();\n    const main = resolve.sync(x, {\n      basedir: parentPath,\n      extensions: ['.js', '.json', '.node', '.mjs'],\n    });\n    const pkg = packageUp(main);\n    if (!pkg || !pkg.json.module) return main;\n\n    // try resolving as a module\n    const modulePath = path.resolve(path.dirname(pkg.path), pkg.json.module);\n    if (pkg.json.name === x) return modulePath; // the module\n\n    // a relative path. Only accept if it doesn't break the relative naming and it exists\n    const mainPath = path.resolve(path.dirname(pkg.path), pkg.json.main);\n    const moduleResolved = path.resolve(modulePath, path.relative(mainPath, main));\n    return moduleResolved.indexOf(x.replace(pkg.json.name, '')) < 0 || !fs.existsSync(moduleResolved) ? main : moduleResolved;\n  }\n\n  return x;\n}\n"],"names":["fs","path","process","fileURLToPath","resolve","packageUp","moduleRegEx","toPath","x","context","startsWith","isAbsolute","parentPath","parentURL","dirname","cwd","test","main","sync","basedir","extensions","pkg","json","module","modulePath","name","mainPath","moduleResolved","relative","indexOf","replace","existsSync"],"mappings":"AAAA,OAAOA,QAAQ,UAAU;AACzB,OAAOC,UAAU,YAAY;AAC7B,OAAOC,aAAa,eAAe;AACnC,SAASC,aAAa,QAAQ,WAAW;AACzC,OAAOC,aAAa,UAAU;AAC9B,OAAOC,eAAe,kBAAkB;AAExC,MAAMC,cAAc;AAEpB,eAAe,SAASC,OAAOC,CAAC,EAAEC,OAAO;IACvC,IAAID,EAAEE,UAAU,CAAC,YAAY,OAAOP,cAAcK;IAClD,IAAIP,KAAKU,UAAU,CAACH,IAAI,OAAOA;IAC/B,IAAIA,CAAC,CAAC,EAAE,KAAK,KAAK;QAChB,+DAA+D;QAC/D,MAAMI,aAAaH,WAAWA,QAAQI,SAAS,GAAGZ,KAAKa,OAAO,CAACP,OAAOE,QAAQI,SAAS,KAAKX,QAAQa,GAAG;QACvG,OAAOd,KAAKG,OAAO,CAACQ,YAAYJ;IAClC;IACA,IAAIF,YAAYU,IAAI,CAACR,IAAI;QACvB,+DAA+D;QAC/D,MAAMI,aAAaH,WAAWA,QAAQI,SAAS,GAAGZ,KAAKa,OAAO,CAACP,OAAOE,QAAQI,SAAS,KAAKX,QAAQa,GAAG;QACvG,MAAME,OAAOb,QAAQc,IAAI,CAACV,GAAG;YAC3BW,SAASP;YACTQ,YAAY;gBAAC;gBAAO;gBAAS;gBAAS;aAAO;QAC/C;QACA,MAAMC,MAAMhB,UAAUY;QACtB,IAAI,CAACI,OAAO,CAACA,IAAIC,IAAI,CAACC,MAAM,EAAE,OAAON;QAErC,4BAA4B;QAC5B,MAAMO,aAAavB,KAAKG,OAAO,CAACH,KAAKa,OAAO,CAACO,IAAIpB,IAAI,GAAGoB,IAAIC,IAAI,CAACC,MAAM;QACvE,IAAIF,IAAIC,IAAI,CAACG,IAAI,KAAKjB,GAAG,OAAOgB,YAAY,aAAa;QAEzD,qFAAqF;QACrF,MAAME,WAAWzB,KAAKG,OAAO,CAACH,KAAKa,OAAO,CAACO,IAAIpB,IAAI,GAAGoB,IAAIC,IAAI,CAACL,IAAI;QACnE,MAAMU,iBAAiB1B,KAAKG,OAAO,CAACoB,YAAYvB,KAAK2B,QAAQ,CAACF,UAAUT;QACxE,OAAOU,eAAeE,OAAO,CAACrB,EAAEsB,OAAO,CAACT,IAAIC,IAAI,CAACG,IAAI,EAAE,OAAO,KAAK,CAACzB,GAAG+B,UAAU,CAACJ,kBAAkBV,OAAOU;IAC7G;IAEA,OAAOnB;AACT"}